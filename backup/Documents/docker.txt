Installatie
===========

Zie: https://docs.docker.com/engine/installation/linux/ubuntulinux/

Bij mij op een Ubuntu 16.04 systeem kwam het uit op onderstaande:


sudo -i

apt-get update

apt-get install apt-transport-https ca-certificates

apt-key adv \
    --keyserver hkp://ha.pool.sks-keyservers.net:80 \
    --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

echo "deb https://apt.dockerproject.org/repo ubuntu-xenial main" \
    | tee /etc/apt/sources.list.d/docker.list

apt-get update

apt-get -y install \
    linux-image-generic \
    linux-image-extra-$(uname -r) \
    linux-image-extra-virtual

apt-get -y install docker-engine

usermod -aG docker hgj

REBOOT (beetje maf, maar eerste keer test was een rare permission denied ergens)

sudo service docker start 

docker run hello-world







Werken met Docker

docker [option] command [arguments]

Alle mogelijke command’s zijn:

Doe “docker help <command>” voor uitleg van een commando:

    attach    Attach to a running container
    build     Build an image from a Dockerfile
    commit    Create a new image from a container's changes
    cp        Copy files/folders between a container and the local filesystem
    create    Create a new container
    diff      Inspect changes on a container's filesystem
    events    Get real time events from the server
    exec      Run a command in a running container
    export    Export a container's filesystem as a tar archive
    history   Show the history of an image
    images    List images
    import    Import the contents from a tarball to create a filesystem image
    info      Display system-wide information
    inspect   Return low-level information on a container, image or task
    kill      Kill one or more running containers
    load      Load an image from a tar archive or STDIN
    login     Log in to a Docker registry.
    logout    Log out from a Docker registry.
    logs      Fetch the logs of a container
    network   Manage Docker networks
    node      Manage Docker Swarm nodes
    pause     Pause all processes within one or more containers
    port      List port mappings or a specific mapping for the container
    ps        List containers
    pull      Pull an image or a repository from a registry
    push      Push an image or a repository to a registry
    rename    Rename a container
    restart   Restart a container
    rm        Remove one or more containers
    rmi       Remove one or more images
    run       Run a command in a new container
    save      Save one or more images to a tar archive (streamed to STDOUT 
	        by default)
    search    Search the Docker Hub for images
    service   Manage Docker services
    start     Start one or more stopped containers
    stats     Display a live stream of container(s) resource usage statistics
    stop      Stop one or more running containers
    swarm     Manage Docker Swarm
    tag       Tag an image into a repository
    top       Display the running processes of a container
    unpause   Unpause all processes within one or more containers
    update    Update configuration of one or more containers
    version   Show the Docker version information
    volume    Manage Docker volumes
    wait      Block until a container stops, then print its exit code






Basis Apache & PHP voorbeeld voor Docker
========================================

De akties:

1) Haal een ubuntu Docker image bij Docker hub op.
2) Start een Docker container gebasseerd op deze image.
3) Installeer apache/mysql erin en verlaat de container weer.
4) Sla de wijzigingen daarna op onder een nieuwe image.
5) Maak een nieuwe docker container vanuit die image en start die
6) Start de Apache service binnen die docker container.
7) Bekijk het resultaat in je browser.


De uitvoering

1)	docker pull ubuntu

hgj@ubuntu:~/pad$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              104bec311bcd        4 weeks ago         129 MB

2)	docker run --name create-lamp -ti ubuntu bash

3)	apt-get update
	apt-get install apache2 libapache2-mod-php7.0
	exit

4)	docker commit create-lamp lamp

hgj@ubuntu:~/pad$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
lamp                latest              f67fe0a1769b        8 seconds ago       282.2 MB
ubuntu              latest              104bec311bcd        4 weeks ago         129 MB

5 ) 	docker run --name lamp -p 80:80 -ti lamp 

6)	service apache2 start

7)	http://localhost






Apache PHP Ubuntu
=================

Een directory ~/pad gemaakt met daarin:

de www directory van PAD
de apps directory van PAD
een Dockerfile bestand

De inhoud van Dockerfile is:

FROM alpine:3.5

RUN apk add --no-cache php7-session php7-mysqli php7-mbstring php7-xml php7-gd php7-zlib php7-bz2 php7-zip php7-openssl php7-curl php7-opcache php7-json apache2 php7-apache2

RUN mkdir -p /run/apache2
RUN mkdir -p /var/pad
RUN sed -i 's/\/var\/www\/localhost\/htdocs/\/var\/pad\/www/g' /etc/apache2/httpd.conf

COPY apps /var/pad/apps
COPY www  /var/pad/www

RUN chown -R apache:apache /var/pad

EXPOSE 80

ENTRYPOINT ["httpd", "-D", "FOREGROUND"]

Een Docker Image maken met behulp van bovenstaande Dockerfile

	docker build -t pad .

Een Docker Container maken van bovenstaande Docker Image

docker create \
    --name pad \
    -p 80:80 \
    -v /var/pad:/var/pad \
    -v /var/pad/www:/var/www/localhost/htdocs \
    -v /tmp/log/pad:/var/log/apache2 
    pad

Deze Docker Container opstarten:	

	docker start pad	

Meer commando’s voor deze Docker PAD container

	Een shell prompt in deze container: 		docker exec -ti pad /bin/sh
	De logfiles van deze container bekijken:	docker logs -f pad






